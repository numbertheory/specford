// Autogenerated by Specford.
var pg = null;
var Tester = require('../src/utils/tester');
var test = new Tester;
var colorizer = require('../src/utils/colorizer');
var Logger = require('../src/utils/logger');
var log = new Logger;
var steps = [
function(status) {
if(status !== 'success') log.unstamped('Network error', 'error');
else {
log.pgOpened();
test.start();
test.selectorExists('.menu-bar .logo', 'a[href="/en"]');
test.selectorExists('.menu-bar .logo', 'a img[src="http://www.plangrid.com/images/plangrid-logo.png"]');
test.selectorExists('.menu-bar .menu', '.headerLoginLink');
pg.onUrlChanged = steps.shift();
test.clickSelector('.menu-bar .menu', '.headerLoginLink');
}},function(url) {
log.stamped('navigated to: ' + url, 'gray');
test.selectorExists('body', '.popup-container');
test.stop();
phantom.exit();
}
];
var visit = function(url) {
if(pg) pg.close();
else {
pg = require('webpage').create();
test.pg = pg;
pg.onConsoleMessage = function(msg) {log.unstamped(msg, 'yellow');};
pg.onNavigationRequested = function(url, type) {log.stamped(('navigating to: ' + url), 'gray');};
pg.onError = function(msg, trace) {

  var msgStack = ['ERROR: ' + msg];

  if (trace && trace.length) {
    msgStack.push('TRACE:');
    trace.forEach(function(t) {
      msgStack.push(' -> ' + t.file + ': ' + t.line + (t.function ? ' (in function "' + t.function +'")' : ''));
    });
  }

  log.unstamped(msgStack.join('\n'), 'yellow');
};
}
log.pgOpening();
pg.open(url, steps.shift());
};
visit('http://www.plangrid.com');
